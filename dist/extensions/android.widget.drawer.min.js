this.android=this.android||{},this.android.widget=this.android.widget||{},this.android.widget.drawer=function(){"use strict";var e='<?xml version="1.0" encoding="utf-8"?>\n<resources>\n\t<style name="{&appTheme}" parent="{~parentTheme}">\n\t\t<item name="android:windowDrawsSystemBarBackgrounds">true</item>\n\t\t<item name="android:statusBarColor">@android:color/transparent</item>\n\t\t<item name="android:windowTranslucentStatus">true</item>\n!items\n\t\t<item name="{&name}">{&value}</item>\n!items\n\t</style>\n</resources>',t=android.lib.base.Resource,n=androme.lib.dom,a=androme.lib.enumeration,i=androme.lib.constant,o=androme.lib.util,r=android.lib.constant,d=android.lib.enumeration,s=android.lib.util;class l extends androme.lib.base.Extension{constructor(e,t,n,a){super(e,t,n,a),this.documentRoot=!0,this.require(i.EXT_NAME.EXTERNAL,!0),this.require("android.widget.menu"),this.require("android.widget.coordinator")}init(e){return!(!this.included(e)||!e.children.length)&&(Array.from(e.children).forEach(e=>{"NAV"!==e.tagName||o.includes(e.dataset.use,i.EXT_NAME.EXTERNAL)||(e.dataset.use=(o.hasValue(e.dataset.use)?`${e.dataset.use}, `:"")+i.EXT_NAME.EXTERNAL)}),this.application.parseElements.add(e),!0)}processNode(e){const n=s.createAttribute(this.options.self);if(l.findNestedByName(e.element,"android.widget.menu"))o.defaultWhenNull(n,"android","fitsSystemWindows","true"),this.setStyleTheme(e.localSettings.targetAPI);else{const t=s.createAttribute(this.options.navigationView);o.defaultWhenNull(t,"android","layout_gravity",e.localizeString("left"));const n=e.item();n.android("layout_gravity",t.android.layout_gravity),n.android("layout_height","match_parent"),n.positioned=!0}return e.documentRoot=!0,e.setControlType(r.SUPPORT_ANDROID.DRAWER,d.CONTAINER_NODE.BLOCK),e.exclude({resource:a.NODE_RESOURCE.FONT_STYLE}),{output:this.application.controllerHandler.renderNodeStatic(r.SUPPORT_ANDROID.DRAWER,0,t.formatOptions(n,this.application.extensionManager.optionValueAsBoolean(r.EXT_ANDROID.RESOURCE_STRINGS,"numberResourceValue")),"match_parent","match_parent",e,!0),complete:!0}}postParseDocument(e){const n=this.application,a=s.createAttribute(this.options.navigationView),d=o.optionalAsString(l.findNestedByName(e.element,"android.widget.menu"),"dataset.layoutName"),u=o.optionalAsString(l.findNestedByName(e.element,i.EXT_NAME.EXTERNAL),"dataset.layoutName");if(""!==d&&o.defaultWhenNull(a,"app","menu",`@menu/${d}`),""!==u&&o.defaultWhenNull(a,"app","headerLayout",`@layout/${u}`),""!==d||""!==u){o.defaultWhenNull(a,"android","id",`${e.documentId}_navigation`),o.defaultWhenNull(a,"android","fitsSystemWindows","true"),o.defaultWhenNull(a,"android","layout_gravity",e.localizeString("left"));const i=n.controllerHandler.renderNodeStatic(r.SUPPORT_ANDROID.NAVIGATION_VIEW,1,t.formatOptions(a,this.application.extensionManager.optionValueAsBoolean(r.EXT_ANDROID.RESOURCE_STRINGS,"numberResourceValue")),"wrap_content","match_parent");n.addRenderQueue(""+e.id,i)}}postProcedure(e){const t=l.findNestedByName(e.element,"android.widget.coordinator");if(t){const e=n.getElementAsNode(t);e&&e.some(e=>e.positioned)&&e.inlineHeight&&e.android("layout_height","match_parent")}}setStyleTheme(t){if(this.application.resourceHandler.fileHandler){const n=Object.assign({},this.options.resource);o.defaultWhenNull(n,"appTheme",function(e){for(const t of e){const e=/<style\s+name="([\w$]+)"\s+parent="Theme\.[\w$.]+"/.exec(t.content);if(e)return e[1]}return""}(this.application.resourceHandler.fileHandler.assets)||"AppTheme"),o.defaultWhenNull(n,"parentTheme","Theme.AppCompat.Light.NoActionBar");const a={appTheme:n.appTheme,parentTheme:n.parentTheme,items:[]};o.defaultWhenNull(n,"output","path",`res/values${t>=21?"":"-v21"}`),o.defaultWhenNull(n,"output","file","android.widget.drawer.xml"),this.application.resourceHandler.addStyleTheme(e,a,n)}}}const u=new l("android.widget.drawer",2);return androme&&androme.includeAsync(u),u}();
